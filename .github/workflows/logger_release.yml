# Workflow to build and deploy designer dashboard to server.
name: OpenGameData Logger Deploy Script
on:
  workflow_dispatch: # Allow manual trigger of this workflow from the Actions tab
  push: # Trigger automatically when we do a merge to production
     branches: [ production ] 

env:
  DEPLOY_HOST: ${{ vars.OGD_LOGGER_HOST }}
  DEPLOY_DIR:  ${{ vars.WEB_PATH }}/${{ github.event.repository.name }}/${{ github.ref_name }}
  DEPLOY_URL:  ${{ vars.OGD_LOGGER_HOST }}/${{ github.event.repository.name }}/${{ github.ref_name }}
  URL_PATH:    ${{ github.event.repository.name }}/${{ github.ref_name }}

jobs:
  production_deploy:
    name: Production Deploy
    runs-on: ubuntu-22.04

    steps:

  # 1. Local checkout & config
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Config File
      uses: ./.github/actions/logger_config
      with:
        db_user: ${{ secrets.OGD_LOGGING_USER }}
        db_pass: ${{ secrets.OGD_LOGGING_PASS }}

  # 2. Build 

  # 3. Remote config & deploy
    - name: Get OpenConnect installed
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &

    - name: Setup Access Key
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.DEPLOY_KEY}}' >> ./key.txt
        chmod 600 ./key.txt

    - name: Ensure directory exists
      run: ssh -o StrictHostKeyChecking=no -T -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.DEPLOY_HOST }} "mkdir -p ${{ env.DEPLOY_DIR }}"

    - name: Upload to web server via rsync
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -vrc --exclude-from rsync-exclude
        path: ./*
        remote_path: ${{ env.DEPLOY_DIR }}
        remote_host: ${{ env.DEPLOY_HOST }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key:  ${{ secrets.DEPLOY_KEY  }}

  # 4. Cleanup & complete
    - name: Announce deploy
      run: echo "Deployed to ${{ env.DEPLOY_URL }}"
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v3
      with:
        path: ./*.log
